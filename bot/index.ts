import dotenv from "dotenv"
import TelegramBot from "node-telegram-bot-api"

import { prisma } from "../db"

dotenv.config()

const token = process.env.BOT_TOKEN

if (!token) {
  throw new Error("token empty!")
}

const bot = new TelegramBot(token, { polling: true })

bot.onText(/\/pq/, async ({ chat }) => {
  return bot.sendMessage(
    chat.id,
    '<b>–ü—Ä–∏–≤–µ—Ç!</b> <i>–≠—Ç–æ –±–æ—Ç PQ4A67</i> <i>–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω—è –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–∫—É –∫–æ–º–∞–Ω–¥—É /token </i><b>–î–∞–ª–µ–µ –∑–∞–π–¥–∏—Ç–µ –Ω–∞ <a href="http://137.184.47.198/">—Å–∞–π—Ç</a> –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å! </b>',
    { parse_mode: "HTML" }
  )
})

bot.onText(/\/token/, async ({ from, chat }) => {
  if (from?.id !== chat.id) {
    return bot.sendMessage(chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–∫—É –∏ —è –≤—ã–¥–∞–º —Ç–æ–∫–µ–Ω!")
  }
  const token = (
    Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)
  ).toUpperCase()

  try {
    await prisma.user.upsert({
      where: {
        tId: from.id,
      },
      update: {
        token,
      },
      create: {
        tId: from.id,
        userName: from.username || "userName",
        lastName: from.last_name,
        firstName: from.first_name,
        isBot: from.is_bot,
        languageCode: from.language_code,
        token,
      },
    })
    await bot.sendMessage(chat.id, token)
  } catch (e) {
    console.log(e)
    await bot.sendMessage(chat.id, "—á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫(((")
  }
})

bot.onText(/\/pq(.+)/, async (msg, match) => {
  const chatId = msg.chat.id

  if (!match) return bot.sendMessage(chatId, "–Ø —Ç–æ–∂–µ —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å üòÄ")

  const name = match[1]

  const category = await prisma.category.findUnique({
    select: {
      posts: {
        select: {
          text: true,
          image: true,
        },
      },
    },
    where: {
      name,
    },
  })

  if (!category) {
    return bot.sendMessage(chatId, "–ö —Å–æ–∂–µ–ª–µ–Ω–∏—é —Ç–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç. üò©")
  }

  const { posts } = category

  if (!category.posts.length) {
    return bot.sendMessage(chatId, "–Ø –Ω–∞—à–µ–ª –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–æ –æ–Ω–∞ –ø—É—Å—Ç–∞. üò®")
  }

  const post = posts[Math.floor(Math.random() * posts.length)]

  if (post.image) {
    return bot.sendPhoto(chatId, post.image, { caption: post.text ? post.text : undefined })
  }

  if (post.text) {
    return bot.sendMessage(chatId, post.text)
  }

  return bot.sendMessage(
    chatId,
    "–£ –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç —Ç–µ–ª–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –û–Ω –ø—Ä–æ—à–µ–ª —á–µ—Ä–µ–∑ –º–æ—é —Å—É–ø–µ—Ä –≤–∞–ª–∏–¥–∞—Ü–∏—é! ü§î"
  )
})
